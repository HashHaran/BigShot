import Head from "next/head";
import { WalletConnectButton } from "../components/wallet_connect";
import { useAccount, useNetwork } from "wagmi";
import { useEffect, useState } from "react";
import { BiCheck } from "react-icons/bi";
import { GrFormClose } from "react-icons/gr";
import DepositModal from "../components/depositModal";

export default function Home() {
  const [walletAssets, setWalletAssets] = useState([]);
  const [open, setOpen] = useState(false);
  const { address, isDisconnected, isConnected } = useAccount();
  const { chain } = useNetwork();
  const fetchAssets = async () => {
    const assests = await fetch(
      `https://api.covalenthq.com/v1/${chain.id}/address/${address}/portfolio_v2/?quote-currency=USD&format=JSON&key=${process.env.NEXT_PUBLIC_COVALENT_API_KEY}`
    );
    const response = await assests.json();
    const data = response.data.items;
    console.log(response.data.items);
    setWalletAssets(data);
  };
  useEffect(() => {
    if (isConnected) {
      fetchAssets();
    }
  }, []);

  return (
    <div className="bg-gradient-to-r from-violet via-light-blue to-fuchsia dark:bg-white  my-0">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg-none">
        <div className="flex-row pt-5">
          <div className="flex justify-end mb-10">
            {isConnected && (
              <div className="h-fit w-fit ml-9/12 mr-10">
                <WalletConnectButton />
              </div>
            )}
          </div>

          <div className="bg-white dark:bg-black w-9/12 h-64 ml-40 rounded-lg mb-10">
            <p className="text-center text-2xl font-bold py-5">About</p>
            <p className="mx-10 font-semibold text-md">
              Big Shot is a DeFi protocol that enables the user to hold
              <a
                className="text-gray"
                href="https://www.investopedia.com/terms/s/short.asp#:~:text=Shorting%20is%20a%20strategy%20used,short%20position%20is%20in%20place"
                target="blank"
              >
                {" "}short positions{" "}
              </a>{" "}
              on any ERC token. The protocol works by integrating with both AAVE
              and UNISWAP for the liquidity needs. Giving you the advantage deep
              pocketed pools to take humongous short positions.
            </p>
            <p className="ml-10 font-semibold text-md">
              This is achieved by the following steps:
            </p>

            <p className="ml-8 font-semibold text-md">
              - The user deposits an amount of a token to short the leverage{" "}
            </p>
          </div>
          {isConnected ? (
            <div className="flex pb-56">
              <div className="bg-white w-5/12 h-fit ml-20 rounded-lg">
                <p className="text-black font-semibold m-5">
                  Assests to Supply
                </p>
                <div className="flex mt-10">
                  <p className="text-black ml-10 text-sm">Assests</p>
                  <p className="text-black ml-20 text-sm">Balance</p>
                  <p className="text-black ml-20 text-sm">Price (USD)</p>
                  <p className="text-black text-sm w-16 ml-10">can short</p>
                </div>
                <hr className="w-full"></hr>
                {walletAssets.map((assest) => (
                  <div className="mt-1">
                    <div className="flex">
                      <img
                        className="ml-5 mt-5 mb-2"
                        src={
                          assest.logo_url ||
                          `https://t3.ftcdn.net/jpg/04/40/40/64/360_F_440406469_l7tqWxUWXMgJr0ZRad3K6L689mpM0Gdc.jpg`
                        }
                        alt={assest.contract_symbol}
                        height="30"
                        width="30"
                      />
                      <p className="text-black mt-6 ml-3 font-semibold ">
                        {assest.contract_name.length <= 8
                          ? `${assest.contract_name} ${"      "}`
                          : ` ${assest.contract_name.slice(0, 6)}..`}
                      </p>
                      <p className="text-black mt-6 ml-16">
                        {(
                          assest.holdings[0].close.balance /
                          10 ** assest.contract_decimals
                        ).toFixed(3)}
                      </p>
                      <p className="text-black mt-6 ml-16">
                        {assest.holdings[0].close.quote == null
                          ? "N/A"
                          : assest.holdings[0].close.quote}
                      </p>
                      {assest.holdings[0].close.quote == null ? (
                        <GrFormClose
                          className="ml-20 mt-5"
                          size={30}
                          colorRendering="red"
                        />
                      ) : (
                        <BiCheck
                          className="ml-20 mt-5"
                          size={30}
                          color="green"
                        />
                      )}
                      <button
                        disabled={
                          assest.holdings[0].close.quote == null ? true : false
                        }
                        onClick={() => setOpen(true)}
                        className={
                          assest.holdings[0].close.quote == null
                            ? "bg-gray w-fit h-fit p-1 px-2 font-semibold text-sm ml-10 rounded-lg text-white mt-5"
                            : `bg-blue w-fit h-fit p-1 px-2 font-semibold text-sm ml-10 rounded-lg text-white mt-5`
                        }
                      >
                        short
                      </button>
                      <DepositModal open={open} setOpen={setOpen} />
                    </div>
                    <hr className="w-full"></hr>
                  </div>
                ))}
              </div>
              <div className="bg-white w-5/12 h-28 ml-20 rounded-lg">
                <p className="text-black font-semibold m-5">
                  Open short positions
                </p>
                <div className="flex mt-10">
                  <p className="text-black ml-10 text-sm">Assests</p>

                  <p className="text-black ml-20 text-sm">Amount shorted</p>
                </div>
              </div>
            </div>
          ) : (
            <div className="mt-20 pl-[600px] pb-80">
              <WalletConnectButton />
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
